---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: push-to-cdn
  labels:
    app.kubernetes.io/version: "0.1.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to push content to Red Hat's CDN using exodus-rsync
  params:
    - name: exodusGwUrl
      type: string
      description: URL of the Exodus Gateway
    - name: exodusGwEnv
      type: string
      description: Environment to use in the Exodus Gateway
    - name: exodusGwCert
      type: string
      description: Secret containing the Exodus Gateway certificate
    - name: exodusGwKey
      type: string
      description: Secret containing the Exodus Gateway key
    - name: dataPath
      type: string
      description: >
        Path to the JSON string of the merged data to use in the data workspace
    - name: binariesDir
      type: string
      description: Path where the binaries are stored in the workspace
    - name: subdirectory
      description: Subdirectory inside the workspace to be used
      type: string
      default: ""
  workspaces:
    - name: data
      description: Workspace to save the results to
  results:
    - name: srcDestPath
      type: string
      description: The relative path in the workspace to the stored source:destination paths
  steps:
    - name: create-exodus-conf-file
      image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
      env:
        - name: exodusGwCert
          valueFrom:
            secretKeyRef:
              name: $(params.exodusGwCert)
              key: cert
        - name: exodusGwKey
          valueFrom:
            secretKeyRef:
              name: $(params.exodusGwKey)
              key: key
      script: |
        #!/bin/bash
        set -e

        exodus_crt_path="$(workspaces.data.path)/$(params.subdirectory)/exodus.crt"
        exodus_key_path="$(workspaces.data.path)/$(params.subdirectory)/exodus.key"
        echo "$exodusGwCert" > $exodus_crt_path
        echo "$exodusGwKey" > $exodus_key_path

        exodus_rsync_config_path="$(workspaces.data.path)/$(params.subdirectory)/exodus-rsync.conf"
        cat << EOF > $exodus_rsync_config_path
        gwcert: $exodus_crt_path
        gwkey: $exodus_key_path
        gwurl: $(params.exodusGwUrl)
        gwenv: $(params.exodusGwEnv)

        logger: file:/proc/1/fd/1
        loglevel: INFO

        environments:
        - prefix: exodus
        EOF
        echo "exodus-rsync.conf created here: $exodus_rsync_config_path"
    - name: create-source-destination-for-files
      image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
      script: |
        #!/bin/bash
        set -e  
        BINARIES_PATH="$(workspaces.data.path)/$(params.binariesDir)"

        # Check if the directory exists
        if [ ! -d "$BINARIES_PATH" ]; then
            echo "Directory $BINARIES_PATH does not exist."
            exit 1
        fi

        json_output="{}"
        # Prefix for all destination paths
        prefix="exodus:/content/origin/files/sha256"
        # Loop through each file in the directory
        for BINARY_PATH in "$BINARIES_PATH"/*; do
            if [ -f "$BINARY_PATH" ]; then
                binary_name=$(basename "$BINARY_PATH")
                echo "Processing binary: $binary_name"
                checksum=$(sha256sum "$BINARY_PATH" | awk '{print $1}')
                destination_path="$prefix/${checksum:0:2}/$checksum/$binary_name"
                echo "Destination dir: $destination_path"
                echo ""
                # Add key:value (src:dest) pair to the json_output
                json_output=$(echo "$json_output" | jq --arg key "$BINARY_PATH" --arg value "$destination_path" '.[$key]=$value')
            fi
        done

        src_dest_json=$(workspaces.data.path)/$(params.subdirectory)/src_dest_combination.json
        echo -n "$src_dest_json" > "$(results.srcDestPath.path)"
        echo "$json_output" | tee "$src_dest_json"
    - name: run-exodus-command
      image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
      script: |
        #!/bin/bash
        set -e
        conf_dir="$(workspaces.data.path)/$(params.subdirectory)/exodus-rsync.conf"
        src_dest_json="$(workspaces.data.path)/$(params.subdirectory)/src_dest_combination.json"
        cat "$src_dest_json" | jq -r 'to_entries[] | "\(.key) \(.value)"' | while read -r src dest; do
            echo "Running exodus-rsync command..."
            echo "exodus-rsync --exodus-conf $conf_dir -s $src -d $dest"
            # TODO: Uncomment below to run the actual command
            # exodus-rsync --exodus-conf "$conf_dir" "$src" "$dest"
            echo "exodus-rsync command completed."
            echo ""
        done
